trigger:
  branches:
    include:
      - dev

variables:
- group: MyDevInfraVars
- name: imageTag
  value: '$(Build.BuildId)'

pool:
  name: MySelfHostedPool

parameters:
  - name: services
    type: object
    default:
      - name: InventoryService
        path: src/InventoryService/src/InventoryService.API
      # Add more services here...

stages:
- stage: BuildAndPush
  displayName: Build and Push All Microservices
  jobs:
    - ${{ each svc in parameters.services }}:
      - job: BuildPush_${{ svc.name }}
        displayName: Build and Push ${{ svc.name }}
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'MyACRServiceConnection'
            repository: ${{ svc.name }}
            command: 'buildAndPush'
            Dockerfile: '$(Build.SourcesDirectory)/${{ svc.path }}/Dockerfile'
            buildContext: '$(Build.SourcesDirectory)/src/InventoryService/src' 

            tags: |
              $(imageTag)



- stage: Deploy
  dependsOn: BuildAndPush
  displayName: Deploy All Services to ACA
  jobs:
    - ${{ each svc in parameters.services }}:
      - job: Deploy_${{ svc.name }}
        displayName: Deploy ${{ svc.name }}
        steps:
          - script: |
              echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
              echo "Checking if Bicep file exists..."
              if [ -f "$(Build.SourcesDirectory)/infrastructure/Bicep/main.bicep" ]; then
                echo "Bicep file FOUND"
              else
                echo "Bicep file NOT FOUND"
                ls -l $(Build.SourcesDirectory)/infrastructure/Bicep/
              fi
            displayName: 'Debug: Check paths and files'
        - task: AzureCLI@2
          inputs:
            azureSubscription: 'MyAzureServiceConnection'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              echo "Deploying ${{ svc.name }}..."

              LINUX_TEMPLATE_PATH=$(echo "$(Build.SourcesDirectory)/infrastructure/Bicep/main.bicep" | sed 's|\\|/|g' | sed 's|C:|/mnt/c|i')

              az deployment group create \
                --resource-group $(resourceGroup) \
                --template-file "$LINUX_TEMPLATE_PATH" \
                --parameters acrName=$(acrName) \
                            acrLoginServer=$(acrLoginServer) \
                            containerAppName=${{ svc.name }} \
                            env=$(env) \
                            image=$(acrLoginServer)/${{ svc.name }}:$(imageTag) \
                            revisionSuffix=rev-$(Build.BuildId)

